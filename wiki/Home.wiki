= Java, SQL, & Salesforce =

This site contains source and distributions for several tools based on the <i>JavaForce<i>  library.

What are you interest in doing?
|| *Project* || Description ||
|| JavaForce || Core jar for communicating with Salesforce. ||
|| SQLForce || ANSI SELECT/DELETE/MODIFY//INSERT commands that work with Salesforce. ||
|| SQLForce/Jython || Jython module with ANSI SELECT/DELETE/MODIFY/INSERT commands that work Salesforce ||
|| CopyForce || Copy a Salesforce instance to a local RDBMS ||


All of these tools are part of the *SQLForce* project. 

= Origins of *SQLForce* =

SQLForce was initially created for several reasons:
  * We needed ANSI SELECT, SELECT DISTINCT, SELECT/UNION, DELETE, MODIFY, and INSERT commands that just worked.
  * SOQL and Salesforce's record limits made it just too hard to modify a lot of records.
  * We needed to change all occurences of "United States of America" to "USA" and wanted to use a SQL UPDATE statement.

Overtime, the base java libraries have been used to various other tools including a rich Jython module. We have used the tools, especially the Jython module, for production tasks since 2009. The first time you write a script like:
{{{
UPDATE Contact SET MailingCountry="USA" WHERE MailingCountry IN ("United States", "US")
}}}
you will be hooked. For any Salesforce administrator, SQLForce simply saves a lot of time.

The java libraries use the partner wsdl and are typically upgraded within a few weeks after Salesforce upgrades. 